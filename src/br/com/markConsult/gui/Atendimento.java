/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.markConsult.gui;

import br.com.markConsult.classesMetodos.ConsAtendimentoTableModel;
import br.com.markConsult.classesMetodos.FormatacaoConteudo;
import br.com.markConsult.dao.CadConsultasDAO;
import br.com.markConsult.dao.ICadConsultasDAO;
import br.com.markConsult.entidades.Consulta;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author jeferson
 */
public class Atendimento extends javax.swing.JInternalFrame {

    List<Consulta> consultas;
    private final ConsAtendimentoTableModel model;
    
    String data = (new java.text.SimpleDateFormat("dd/MM/yyyy").format(new java.util.Date(System.currentTimeMillis())));
    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    /**
     * Creates new form VerConsultas
     * @throws java.text.ParseException
     */
    public Atendimento() throws ParseException {
        initComponents();
        
        
        addpopup();
        Date dt = (Date) converte(data);
        tf_dataConsul.setDate(dt);
        model = new ConsAtendimentoTableModel();
        jTConsultas.setModel(model);
        jTConsultas.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
         ajusTabela();
        FormatacaoConteudo corNomes = new FormatacaoConteudo();
        jTConsultas.getColumnModel().getColumn(5).setCellRenderer(corNomes);
        //addPopup(jTConsultas);
        
        
        jTConsultas.getSelectionModel().setSelectionInterval(0, 0);
        
         tf_dataConsul.addPropertyChangeListener((java.beans.PropertyChangeEvent evt) -> {
             //GERA EVENTO
             
             pesqPstatus();
        } //GERA A AÇÃO PRA TROCA DE PROPRIEDADE
        );
         
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
        @Override
        public void run() {
         pesqPstatus();
        }
        }, 10000, 10000);
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPMenu = new javax.swing.JPopupMenu();
        jM_altStatus = new javax.swing.JMenu();
        jMenuIt_Encerra = new javax.swing.JMenuItem();
        jMenuIt_Aguarda = new javax.swing.JMenuItem();
        jMenuIt_Cancel = new javax.swing.JMenuItem();
        jMenuIt_EmConsult = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuIt_historico = new javax.swing.JMenuItem();
        jMenuIt_verProcedimentos = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTConsultas = new javax.swing.JTable();
        bt_sair = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jC_status = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tf_dataConsul = new com.toedter.calendar.JDateChooser("dd/MM/yyyy" , "##/##/####" , ' ');
        bt_data_anterior = new javax.swing.JButton();
        bt_data_proxima = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jM_altStatus.setText("Alterar status");

        jMenuIt_Encerra.setText("Encerrada");
        jMenuIt_Encerra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_EncerraActionPerformed(evt);
            }
        });
        jM_altStatus.add(jMenuIt_Encerra);

        jMenuIt_Aguarda.setText("Aguardando");
        jMenuIt_Aguarda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_AguardaActionPerformed(evt);
            }
        });
        jM_altStatus.add(jMenuIt_Aguarda);

        jMenuIt_Cancel.setText("Cancelada");
        jMenuIt_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_CancelActionPerformed(evt);
            }
        });
        jM_altStatus.add(jMenuIt_Cancel);

        jMenuIt_EmConsult.setText("Em Consulta");
        jMenuIt_EmConsult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_EmConsultActionPerformed(evt);
            }
        });
        jM_altStatus.add(jMenuIt_EmConsult);

        jPMenu.add(jM_altStatus);
        jPMenu.add(jSeparator1);

        jMenuIt_historico.setText("Ver histórico do Paciente");
        jMenuIt_historico.setActionCommand("Ver historico do Paciente");
        jMenuIt_historico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_historicoActionPerformed(evt);
            }
        });
        jPMenu.add(jMenuIt_historico);

        jMenuIt_verProcedimentos.setText("Ver procedimento");
        jMenuIt_verProcedimentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_verProcedimentosActionPerformed(evt);
            }
        });
        jPMenu.add(jMenuIt_verProcedimentos);

        setClosable(true);
        setIconifiable(true);
        setTitle("Atendiemento");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/help.png"))); // NOI18N

        jTConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTConsultas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTConsultasMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTConsultas);

        bt_sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/Log-Out-icon.png"))); // NOI18N
        bt_sair.setText("Sair");
        bt_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_sairActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fila", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jC_status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Em Consulta", "Aguardando", "Encerrada", "Cancelar", "Todos" }));
        jC_status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_statusActionPerformed(evt);
            }
        });

        jLabel4.setText("Status:");

        jLabel3.setText("Data:");

        bt_data_anterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/navigate-left-icon (1).png"))); // NOI18N
        bt_data_anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_data_anteriorActionPerformed(evt);
            }
        });

        bt_data_proxima.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/navigate-right-icon2.png"))); // NOI18N
        bt_data_proxima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_data_proximaActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/update-icon.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jC_status, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(tf_dataConsul, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_data_anterior, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_data_proxima, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(689, 689, 689))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jButton1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jC_status)
                            .addComponent(bt_data_proxima, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(bt_data_anterior, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_dataConsul, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bt_sair))
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_sair)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_sairActionPerformed
        dispose();
    }//GEN-LAST:event_bt_sairActionPerformed

    private void jC_statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_statusActionPerformed
        pesqPstatus();
    }//GEN-LAST:event_jC_statusActionPerformed

    private void jTConsultasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTConsultasMousePressed

        if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 1) {
              
            } else if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 2) {
                int s = jTConsultas.getSelectedRow();
                int id_paciente = model.getItem(s).getPaciente().getId();
                FichaModal f = new FichaModal(null, true);
                f.buscaClient(""+id_paciente);
                f.setVisible(true);
 
          }
       
    }//GEN-LAST:event_jTConsultasMousePressed

    private void bt_data_anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_data_anteriorActionPerformed

        try {
            Date atu = pegaDataAnterior();
            tf_dataConsul.setDate(atu);
        } catch (ParseException ex) {
            Logger.getLogger(AgendaConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_data_anteriorActionPerformed

    private void bt_data_proximaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_data_proximaActionPerformed
        try {

            Date atu = pegaProximaData();
            tf_dataConsul.setDate(atu);

        } catch (ParseException ex) {
            Logger.getLogger(AgendaConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_data_proximaActionPerformed

    private void jMenuIt_EncerraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_EncerraActionPerformed
        popupselsecionado(2);
    }//GEN-LAST:event_jMenuIt_EncerraActionPerformed

    private void jMenuIt_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_CancelActionPerformed
        popupselsecionado(3);
    }//GEN-LAST:event_jMenuIt_CancelActionPerformed

    private void jMenuIt_historicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_historicoActionPerformed
      buscConsulta();
    }//GEN-LAST:event_jMenuIt_historicoActionPerformed

    private void jMenuIt_AguardaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_AguardaActionPerformed
      popupselsecionado(5);
    }//GEN-LAST:event_jMenuIt_AguardaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        pesqPstatus();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuIt_EmConsultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_EmConsultActionPerformed
       popupselsecionado(6);
    }//GEN-LAST:event_jMenuIt_EmConsultActionPerformed

    private void jMenuIt_verProcedimentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_verProcedimentosActionPerformed
        VerProcedimentosConsulta1 vpc = new VerProcedimentosConsulta1(null, true);
        int consultaSelecionada = jTConsultas.getSelectedRow();
        vpc.setConsulta(model.getItem(consultaSelecionada));
        vpc.setVisible(true);
    }//GEN-LAST:event_jMenuIt_verProcedimentosActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_data_anterior;
    private javax.swing.JButton bt_data_proxima;
    private javax.swing.JButton bt_sair;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jC_status;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jM_altStatus;
    private javax.swing.JMenuItem jMenuIt_Aguarda;
    private javax.swing.JMenuItem jMenuIt_Cancel;
    private javax.swing.JMenuItem jMenuIt_EmConsult;
    private javax.swing.JMenuItem jMenuIt_Encerra;
    private javax.swing.JMenuItem jMenuIt_historico;
    private javax.swing.JMenuItem jMenuIt_verProcedimentos;
    private javax.swing.JPopupMenu jPMenu;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable jTConsultas;
    private com.toedter.calendar.JDateChooser tf_dataConsul;
    // End of variables declaration//GEN-END:variables
public void buscConsultsPid(int id) {
        ICadConsultasDAO dao = new CadConsultasDAO();
        int status = jC_status.getSelectedIndex();
        
        consultas = dao.buscaConsultas(""+ id, 'a',""+status+1);
        model.listar(consultas);
        FormatacaoConteudo corNomes = new FormatacaoConteudo();
        jTConsultas.getColumnModel().getColumn(3).setCellRenderer(corNomes);
    }

    public void retornaiItemSelecionado(int id, String nome) {
        ICadConsultasDAO dao = new CadConsultasDAO();
        consultas = dao.buscaConsultas("" + id, 'a',"1,2,3,4,5");
        model.listar(consultas);

    }
    private void buscConsulta() {
        ConsPorPaciente tela_busca = new ConsPorPaciente(null, true);
        int sele = jTConsultas.getSelectedRow();
        Consulta con = model.getItem(sele);
        tela_busca.retornaiItemSelecionado(con.getPaciente().getId(), con.getPaciente().getNome());
        tela_busca.setVisible(true);
        pesqPstatus();
        
    }
    

    /**
     *
     */
    public void pesqPstatus() {
    try {
        CadConsultasDAO dao = new CadConsultasDAO();
        int status = jC_status.getSelectedIndex();
        switch (status) {
            case 0:
                 consultas = dao.buscaConDataPstat(pegadataAtual1(),""+6);
                break;
            case 1:
                 consultas = dao.buscaConDataPstat(pegadataAtual1(),""+5);
                break;
            case 2:
                 consultas = dao.buscaConDataPstat(pegadataAtual1(),""+2);
                break;
            case 3:
                 consultas = dao.buscaConDataPstat(pegadataAtual1(),"3");
                break;
            case 4:
                 consultas = dao.buscaConDataPstat(pegadataAtual1(),"2,3,5,6");
                break;
            default:
                 consultas = dao.buscaConDataPstat(pegadataAtual1(),""+5);
        }
                
        model.listar(consultas);
        jTConsultas.getSelectionModel().setSelectionInterval(0, 0);
        ajusTabela();
    } catch (ParseException ex) {
        Logger.getLogger(Atendimento.class.getName()).log(Level.SEVERE, null, ex);
    }

    }

      private void addpopup(){
    jTConsultas.addMouseListener(new MouseAdapter() {

              @Override
              public void mouseClicked(MouseEvent e) {  
        //Verificando se o botão direito foi pressionado  
        if ((e.getModifiers() & MouseEvent.BUTTON3_MASK) != 0) {
            jPMenu.show(jTConsultas, e.getX(), e.getY()); 
        }
              }
    });
    
        
       
        } 

    //Altera o status no banco
    public void popupselsecionado(int status) {
        int c = jTConsultas.getSelectedRow();
        if (c < 0) {
        } else {
            Consulta con = model.getItem(c);
            con.setStatus(status);
            model.alterar(c, con);
            ICadConsultasDAO dao = new CadConsultasDAO();
            dao.altStatConsult2(con);
            pesqPstatus();
           
        }
    }

   
    
    private void ajusTabela(){
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jTConsultas.getColumnModel().getColumn(0).setMinWidth(60);
        jTConsultas.getColumnModel().getColumn(0).setMaxWidth(60);
         jTConsultas.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTConsultas.getColumnModel().getColumn(2).setPreferredWidth(140);
        jTConsultas.getColumnModel().getColumn(3).setPreferredWidth(120);
        jTConsultas.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTConsultas.getColumnModel().getColumn(5).setPreferredWidth(100);
        jTConsultas.getColumnModel().getColumn(6).setPreferredWidth(100);
        jTConsultas.getColumnModel().getColumn(7).setPreferredWidth(200);
        jTConsultas.getColumnModel().getColumn(8).setPreferredWidth(1000);
    }
    
     public final java.util.Date converte(String dataConsul) throws ParseException {
        DateFormat forma = new SimpleDateFormat("dd/MM/yyyy");
        java.sql.Date dat = new java.sql.Date(forma.parse(dataConsul).getTime());

        return dat;
    }
     
     private String pegadataAtual1() throws ParseException{
     java.util.Date data_consul = tf_dataConsul.getDate();
     String dataAtual = formato.format(data_consul);
    
    return dataAtual;
    
}
     
         private Date pegaProximaData() throws ParseException{
     Date dataConve;
     Calendar calendar = new GregorianCalendar();
     calendar.setTime(pegadataAtual());  
     calendar.add(Calendar.DAY_OF_MONTH, +1);  
     dataConve = (Date) converte(new SimpleDateFormat("dd/MM/yyyy").format(calendar.getTime()));
    return dataConve;
    
}
private Date pegaDataAnterior() throws ParseException{
     Date dataConve;
     Calendar calendar = new GregorianCalendar();
     calendar.setTime(pegadataAtual());  
    calendar.add(Calendar.DAY_OF_MONTH, -1);  
     dataConve = (Date) converte(new SimpleDateFormat("dd/MM/yyyy").format(calendar.getTime()));
    return dataConve;
    
}

private Date pegadataAtual() throws ParseException{
     Date dataConve;
     java.util.Date data_consul = tf_dataConsul.getDate();
     String dataAtual = formato.format(data_consul);
     dataConve = (Date) converte(dataAtual);
    
    return dataConve;
    
}
}

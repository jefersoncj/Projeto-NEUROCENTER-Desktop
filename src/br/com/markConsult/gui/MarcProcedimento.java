/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.markConsult.gui;

import br.com.markConsult.classesMetodos.ConsPcliTableModel;
import br.com.markConsult.classesMetodos.FormatacaoConteudo;
import br.com.markConsult.dao.CadConsultasDAO;
import br.com.markConsult.dao.CadProcedimentoDAO;
import br.com.markConsult.dao.ICadConsultasDAO;
import br.com.markConsult.entidades.Consulta;
import br.com.markConsult.entidades.Procedimento;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Jeferson1
 */
public class MarcProcedimento extends javax.swing.JDialog {
    Consulta consulta;
    List<Consulta> consultas;
    private final ConsPcliTableModel model;
    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");

    /**
     * Creates new form CadRetorno
     * @param parent
     * @param modal
     */
    public MarcProcedimento(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
         // coloca uma figura na barra de título da janela  
        URL url = this.getClass().getResource("/br/com/markConsult/imagens/help.png");  
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);  
        this.setIconImage(imagemTitulo); 
        
        model = new ConsPcliTableModel();
        jTConsultas.setModel(model);
        jTConsultas.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ajusTabela();
        FormatacaoConteudo corNomes = new FormatacaoConteudo();
        jTConsultas.getColumnModel().getColumn(7).setCellRenderer(corNomes);
        
        jTConsultas.getSelectionModel().setSelectionInterval(0, 0);
        
         tf_dataConsul.addPropertyChangeListener((java.beans.PropertyChangeEvent evt) -> {
             try {
                 //GERA EVENTO

                 buscaPorData();
             } catch (ParseException ex) {
                 Logger.getLogger(CadRetorno.class.getName()).log(Level.SEVERE, null, ex);
             }
        } //GERA A AÇÃO PRA TROCA DE PROPRIEDADE
        );
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        bt_ok = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTConsultas = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        bt_buscProced = new javax.swing.JButton();
        tf_codProcediemnto = new javax.swing.JTextField();
        tf_descProce = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tf_dataConsul = new com.toedter.calendar.JDateChooser("dd/MM/yyyy" , "##/##/####" , ' ');
        jLabel1 = new javax.swing.JLabel();
        jL_cliente = new javax.swing.JLabel();
        bt_data_proxima = new javax.swing.JButton();
        bt_data_anterior = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Marcar Procedimento");

        jButton1.setText("CANCELAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bt_ok.setText("MARCAR PROCEDIMENTO");
        bt_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_okActionPerformed(evt);
            }
        });

        jTConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Título 1"
            }
        ));
        jScrollPane1.setViewportView(jTConsultas);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        bt_buscProced.setText("...");
        bt_buscProced.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_buscProcedActionPerformed(evt);
            }
        });

        tf_codProcediemnto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_codProcediemntoFocusLost(evt);
            }
        });
        tf_codProcediemnto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_codProcediemntoActionPerformed(evt);
            }
        });
        tf_codProcediemnto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_codProcediemntoKeyPressed(evt);
            }
        });

        tf_descProce.setEditable(false);

        jLabel3.setText("Procedimento:");

        jLabel2.setText("Cliente:");

        jLabel1.setText("Selecione a data para o Procedimento:");

        bt_data_proxima.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/navigate-right-icon2.png"))); // NOI18N
        bt_data_proxima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_data_proximaActionPerformed(evt);
            }
        });

        bt_data_anterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/navigate-left-icon (1).png"))); // NOI18N
        bt_data_anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_data_anteriorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_dataConsul, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_data_anterior, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_data_proxima, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jL_cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(bt_buscProced)
                                .addGap(0, 0, 0)
                                .addComponent(tf_codProcediemnto, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_descProce, javax.swing.GroupLayout.DEFAULT_SIZE, 815, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bt_data_proxima, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(bt_data_anterior, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tf_dataConsul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jL_cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_codProcediemnto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_buscProced)
                    .addComponent(tf_descProce, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_ok))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bt_ok, jButton1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_ok)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bt_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_okActionPerformed
        if (verificaPro()) {
            
        }else{
        if (tf_dataConsul.getDate()== null) {
            JOptionPane.showMessageDialog(null, "Escolha uma data válida!");
        }else if(tf_dataConsul.getDate().after(consulta.getDataConsulta() )){
        java.util.Date data_consul = tf_dataConsul.getDate();
         String dataAtual = formato.format(data_consul);
         Date dataConve = null;
        try {
             dataConve = (Date) converte(dataAtual);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Data inválida");
        }
        consulta.getTipo().setId(3);
        //consulta.getProcedimento().setId(Integer.parseInt(tf_codProcediemnto.getText()));
        consulta.setValor(0);
        consulta.setObs("");
        consulta.setStatus(1);
        consulta.setDataConsulta(dataConve);
        
        ICadConsultasDAO dao = new CadConsultasDAO();
        dao.inseConsult(consulta);
        dispose();
        JOptionPane.showMessageDialog(null, "Procedimento cadastrado com sucesso!");
        }else{
            JOptionPane.showMessageDialog(null, "Data precisa ser maior que a data da Consulta!");
        }}
    }//GEN-LAST:event_bt_okActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bt_buscProcedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_buscProcedActionPerformed
        telaBuscaProced();
    }//GEN-LAST:event_bt_buscProcedActionPerformed

    private void tf_codProcediemntoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_codProcediemntoFocusLost
         
        if (!tf_codProcediemnto.getText().equals("")) {
            buscaProced();
            
        }else{
            tf_codProcediemnto.setText("");
            tf_descProce.setText("");
        }
    }//GEN-LAST:event_tf_codProcediemntoFocusLost

    private void tf_codProcediemntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_codProcediemntoActionPerformed
        bt_ok.requestFocus();
    }//GEN-LAST:event_tf_codProcediemntoActionPerformed

    private void tf_codProcediemntoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_codProcediemntoKeyPressed
        if (tf_codProcediemnto.isEditable()) {
            if (evt.getKeyCode() == KeyEvent.VK_F2) {
                telaBuscaProced();

            }}
    }//GEN-LAST:event_tf_codProcediemntoKeyPressed

    private void bt_data_proximaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_data_proximaActionPerformed
        try {

            Date atu = pegaProximaData();
            tf_dataConsul.setDate(atu);

        } catch (ParseException ex) {
            Logger.getLogger(CadProcedimento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_data_proximaActionPerformed

    private void bt_data_anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_data_anteriorActionPerformed

        try {
            Date atu = pegaDataAnterior();
            tf_dataConsul.setDate(atu);
        } catch (ParseException ex) {
            Logger.getLogger(CadProcedimento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_data_anteriorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarcProcedimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            MarcProcedimento dialog = new MarcProcedimento(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_buscProced;
    private javax.swing.JButton bt_data_anterior;
    private javax.swing.JButton bt_data_proxima;
    private javax.swing.JButton bt_ok;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jL_cliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTConsultas;
    private javax.swing.JTextField tf_codProcediemnto;
    private com.toedter.calendar.JDateChooser tf_dataConsul;
    private javax.swing.JTextField tf_descProce;
    // End of variables declaration//GEN-END:variables
public void passaConsulta(Consulta con){
    consulta = con;
}

public final java.util.Date converte(String dataConsul) throws ParseException {
   java.sql.Date dat = null;
    try {
        DateFormat forma = new SimpleDateFormat("dd/MM/yyyy");
         dat = new java.sql.Date(forma.parse(dataConsul).getTime());
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Data inválida");
    }
        

        return dat;
    }
        
    public void setNomeClie(String nome){
        jL_cliente.setText(nome);
        
        Calendar c = Calendar.getInstance();
        c.add(Calendar.MONTH, 1);
        tf_dataConsul.setDate(c.getTime());
    }
    
     public void buscaProced() {
        CadProcedimentoDAO dao = new CadProcedimentoDAO();
        Procedimento pro = dao.procuraPorID(Integer.parseInt(tf_codProcediemnto.getText()));
        if (pro != null) {
            tf_codProcediemnto.setText(pro.getId().toString());
            tf_descProce.setText(pro.getDsProcedimento());
            bt_buscProced.setBackground(Color.LIGHT_GRAY);
        } else {
             JOptionPane.showMessageDialog(null, "Procedimento não cadastrada!", "Informação", JOptionPane.INFORMATION_MESSAGE); 
             tf_codProcediemnto.requestFocus();
        }
        

    }
     
     public void telaBuscaProced(){
        BuscaProcedimentos telBuscProc = new BuscaProcedimentos(null, true);
        telBuscProc.setVisible(true);

        if (telBuscProc.okselecionado()) {
            Procedimento p = telBuscProc.retornEspSele();
            if (p != null) {
               tf_codProcediemnto.setText(p.getId().toString());
               tf_descProce.setText(p.getDsProcedimento());
               bt_buscProced.setBackground(Color.LIGHT_GRAY);
            }
        }
       
       }
     
     public boolean verificaPro(){
         Boolean retorno = false;
         if (tf_codProcediemnto.getText().equals("")) {
             bt_buscProced.setBackground(Color.red);
             retorno = true;
         }
        return retorno;
     }
     
      private Date pegadataAtual() throws ParseException{
    
     Date dataConve;
     java.util.Date data_consul = tf_dataConsul.getDate();
     String dataAtual = formato.format(data_consul);
     dataConve = (Date) converte(dataAtual);
     return dataConve;
    
}
    
    private Date pegaProximaData() throws ParseException{
     Date dataConve;
     Calendar calendar = new GregorianCalendar();
     calendar.setTime(pegadataAtual());  
     calendar.add(Calendar.DAY_OF_MONTH, +1);  
     dataConve = (Date) converte(new SimpleDateFormat("dd/MM/yyyy").format(calendar.getTime()));
    return dataConve;
    
}
private Date pegaDataAnterior() throws ParseException{
     Date dataConve;
     Calendar calendar = new GregorianCalendar();
     calendar.setTime(pegadataAtual());  
    calendar.add(Calendar.DAY_OF_MONTH, -1);  
     dataConve = (Date) converte(new SimpleDateFormat("dd/MM/yyyy").format(calendar.getTime()));
    return dataConve;
    
}


private void ajusTabela(){
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jTConsultas.getColumnModel().getColumn(0).setMinWidth(60);
        jTConsultas.getColumnModel().getColumn(0).setMaxWidth(60);
         jTConsultas.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTConsultas.getColumnModel().getColumn(2).setPreferredWidth(140);
        jTConsultas.getColumnModel().getColumn(3).setPreferredWidth(120);
        jTConsultas.getColumnModel().getColumn(4).setPreferredWidth(60);
        jTConsultas.getColumnModel().getColumn(4).setCellRenderer(direita);
        jTConsultas.getColumnModel().getColumn(5).setPreferredWidth(100);
        jTConsultas.getColumnModel().getColumn(6).setPreferredWidth(100);
        jTConsultas.getColumnModel().getColumn(7).setPreferredWidth(100);
        jTConsultas.getColumnModel().getColumn(8).setPreferredWidth(100);
        jTConsultas.getColumnModel().getColumn(9).setPreferredWidth(200);
        jTConsultas.getColumnModel().getColumn(10).setPreferredWidth(1000);
    }

private void buscaPorData() throws ParseException {
         
      ICadConsultasDAO dao = new CadConsultasDAO();
      
      model.listar(dao.buscConsPdata(pegadataAtual()));
         
     }
    
}

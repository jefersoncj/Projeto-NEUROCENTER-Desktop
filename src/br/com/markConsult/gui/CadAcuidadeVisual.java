/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.markConsult.gui;

import br.com.markConsult.classesMetodos.IntegerDocument;
import br.com.markConsult.dao.CadAcuidadeVisualDAO;
import br.com.markConsult.dao.CadPacienteDAO;
import br.com.markConsult.dao.ICadPacienteDAO;
import br.com.markConsult.entidades.AcuidadeVisual;
import br.com.markConsult.entidades.Convenio;
import br.com.markConsult.entidades.Empresa;
import br.com.markConsult.entidades.Funcao;
import br.com.markConsult.entidades.Paciente;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.SwingWorker;

/**
 *
 * @author Jeferson
 */
public class CadAcuidadeVisual extends javax.swing.JInternalFrame {
   String data = (new java.text.SimpleDateFormat("dd/MM/yyyy").format(new java.util.Date(System.currentTimeMillis())));
   SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
   int inserir_alterar = 0;
   String endImage;
    /**
     * Creates new form AcuidadeVisual
     */
    public CadAcuidadeVisual() {
        initComponents();
        estadoBotoes("inicial");
        tf_codigo.setDocument(new IntegerDocument(10));
        tf_idPaciente.setDocument(new IntegerDocument(10));
        tf_olhoDireitoSemCorrecao.setDocument(new IntegerDocument(10));
        tf_olhoEsquerdoSemCorrecao.setDocument(new IntegerDocument(10));
        tf_olhoDireitoComCorrecao.setDocument(new IntegerDocument(10));
        tf_olhoEsquerdoComCorrecao.setDocument(new IntegerDocument(10));
        
        jr_admissional.setActionCommand("ADMISSÃO");
        jr_periodico.setActionCommand("PERIÓDICO");
        jr_demissional.setActionCommand("DEMISSIONAL");
        jr_mudancaDeFuncao.setActionCommand("MUDANÇA DE FUNÇÃO");
        jr_retornoAoTrabalho.setActionCommand("RETORNO AO TRABALHO");
        
        jr_normal.setActionCommand("NORMAL, SEM ALTERAÇOES PARA ATIVIDADES COMUNS.");
        jr_alteracaoLeve.setActionCommand("ALTERAÇÃO LEVE, SEM RESTRIÇÕES PARA ATIVIDADES COMUNS.");
        jr_alteracaoModerada.setActionCommand("ALTERAÇÃO MODERADA A SEVERA. SUGERE-SE AVALIAÇÃO OU CONDUTA OFTALMOLÓGICA.");
        atualizaTela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupExame = new javax.swing.ButtonGroup();
        buttonGroupConclusao = new javax.swing.ButtonGroup();
        jr_periodico = new javax.swing.JRadioButton();
        jr_alteracaoLeve = new javax.swing.JRadioButton();
        jr_demissional = new javax.swing.JRadioButton();
        jr_alteracaoModerada = new javax.swing.JRadioButton();
        jr_mudancaDeFuncao = new javax.swing.JRadioButton();
        jSeparator4 = new javax.swing.JSeparator();
        jr_retornoAoTrabalho = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tf_observacao = new javax.swing.JTextPane();
        jLabel3 = new javax.swing.JLabel();
        tf_olhoDireitoSemCorrecao = new javax.swing.JTextField();
        tf_funcaoPaciente = new javax.swing.JTextField();
        tf_olhoEsquerdoSemCorrecao = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tf_empresaPaciente = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tf_codigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tf_idPaciente = new javax.swing.JTextField();
        bt_buscaPaciente = new javax.swing.JButton();
        tf_nomePaciente = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jr_admissional = new javax.swing.JRadioButton();
        jr_normal = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        tf_olhoEsquerdoComCorrecao = new javax.swing.JTextField();
        tf_olhoDireitoComCorrecao = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        bt_editar = new javax.swing.JButton();
        bt_salvar = new javax.swing.JButton();
        bt_novo = new javax.swing.JButton();
        bt_excluir = new javax.swing.JButton();
        bt_cancelar = new javax.swing.JButton();
        bt_buscar = new javax.swing.JButton();
        bt_ultimo = new javax.swing.JButton();
        bt_avançar = new javax.swing.JButton();
        bt_primeiro = new javax.swing.JButton();
        bt_voltar = new javax.swing.JButton();
        bt_sair = new javax.swing.JButton();
        bt_imprimir = new javax.swing.JButton();
        tf_data = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jc_vermelho = new javax.swing.JCheckBox();
        jc_amarelo = new javax.swing.JCheckBox();
        jc_verde = new javax.swing.JCheckBox();
        tf_idEmpresa = new javax.swing.JTextField();
        tf_idConvenio = new javax.swing.JTextField();
        tf_nomeConvenio = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        tf_idFuncao = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Teste de Acuidade Visual");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/help.png"))); // NOI18N

        buttonGroupExame.add(jr_periodico);
        jr_periodico.setText("PERIÓDICO");

        buttonGroupConclusao.add(jr_alteracaoLeve);
        jr_alteracaoLeve.setText("ALTERAÇÃO LEVE, SEM RESTRIÇÕES PARA ATIVIDADES COMUNS.");

        buttonGroupExame.add(jr_demissional);
        jr_demissional.setText("DEMISSIONAL");

        buttonGroupConclusao.add(jr_alteracaoModerada);
        jr_alteracaoModerada.setText("ALTERAÇÃO MODERADA A SEVERA. SUGERE-SE AVALIAÇÃO OU CONDUTA OFTALMOLÓGICA.");

        buttonGroupExame.add(jr_mudancaDeFuncao);
        jr_mudancaDeFuncao.setText("MUDANÇA DE FUNÇÃO");

        buttonGroupExame.add(jr_retornoAoTrabalho);
        jr_retornoAoTrabalho.setText("RETORNO AO TRABALHO");

        jLabel11.setText("Observação:");

        jLabel6.setText("Acuidade Visual - (Tabela de Snellen)");

        jLabel7.setText("Sem correção: Percepção Luminosa:");

        jLabel8.setText("OLHO DIREITO = 20/");

        jLabel9.setText("OLHO ESQUERDO = 20/");

        jScrollPane1.setViewportView(tf_observacao);

        jLabel3.setText("Funcao:");

        tf_funcaoPaciente.setEditable(false);

        jLabel4.setText("Empresa:");

        tf_empresaPaciente.setEditable(false);

        jLabel5.setText("Exame:");

        jLabel1.setText("Código:");

        jLabel2.setText("Paciente:");

        tf_idPaciente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_idPacienteFocusLost(evt);
            }
        });
        tf_idPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_idPacienteActionPerformed(evt);
            }
        });
        tf_idPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_idPacienteKeyPressed(evt);
            }
        });

        bt_buscaPaciente.setText("...");
        bt_buscaPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_buscaPacienteActionPerformed(evt);
            }
        });

        tf_nomePaciente.setEditable(false);

        jLabel10.setText("Conclusão:");

        buttonGroupExame.add(jr_admissional);
        jr_admissional.setText("ADMISSIONAL");

        buttonGroupConclusao.add(jr_normal);
        jr_normal.setText("NORMAL, SEM ALTERAÇOES PARA ATIVIDADES COMUNS.");

        jLabel12.setText("Com correção");

        jLabel13.setText("OLHO DIREITO = 20/");

        jLabel14.setText("OLHO ESQUERDO = 20/");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setToolTipText("");

        bt_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/Action-edit-icon.png"))); // NOI18N
        bt_editar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Editar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_editarActionPerformed(evt);
            }
        });

        bt_salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/App-floppy-icon.png"))); // NOI18N
        bt_salvar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Salvar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_salvar.setIconTextGap(2);
        bt_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_salvarActionPerformed(evt);
            }
        });

        bt_novo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/new-file-icon.png"))); // NOI18N
        bt_novo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Novo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_novoActionPerformed(evt);
            }
        });

        bt_excluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/trash-icon.png"))); // NOI18N
        bt_excluir.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Excluir", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_excluir.setIconTextGap(2);
        bt_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_excluirActionPerformed(evt);
            }
        });

        bt_cancelar.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        bt_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/Extras-Close-icon.png"))); // NOI18N
        bt_cancelar.setAutoscrolls(true);
        bt_cancelar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cancelar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_cancelar.setIconTextGap(2);
        bt_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cancelarActionPerformed(evt);
            }
        });

        bt_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/Search-icon.png"))); // NOI18N
        bt_buscar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_buscarActionPerformed(evt);
            }
        });
        bt_buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bt_buscarKeyPressed(evt);
            }
        });

        bt_ultimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/hide-right-icon.png"))); // NOI18N
        bt_ultimo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ultimo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_ultimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ultimoActionPerformed(evt);
            }
        });

        bt_avançar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/navigate-right-icon.png"))); // NOI18N
        bt_avançar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Avançar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_avançar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_avançarActionPerformed(evt);
            }
        });

        bt_primeiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/hide-left-icon.png"))); // NOI18N
        bt_primeiro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Primeiro", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_primeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_primeiroActionPerformed(evt);
            }
        });

        bt_voltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/navigate-left-icon.png"))); // NOI18N
        bt_voltar.setToolTipText("");
        bt_voltar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Voltar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_voltarActionPerformed(evt);
            }
        });

        bt_sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/Log-Out-icon.png"))); // NOI18N
        bt_sair.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sair", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_sairActionPerformed(evt);
            }
        });

        bt_imprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/print.png"))); // NOI18N
        bt_imprimir.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Imprimir", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_imprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bt_primeiro, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_voltar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_avançar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_ultimo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_novo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_imprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_sair, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bt_primeiro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_voltar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_avançar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_ultimo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_novo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_salvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_excluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_sair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_imprimir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_editar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        tf_data.setEditable(false);

        jLabel15.setText("Data:");

        jc_vermelho.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jc_vermelho.setForeground(new java.awt.Color(153, 0, 0));
        jc_vermelho.setText("Vermelho");

        jc_amarelo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jc_amarelo.setForeground(new java.awt.Color(255, 255, 0));
        jc_amarelo.setText("Amarelo");

        jc_verde.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jc_verde.setForeground(new java.awt.Color(0, 102, 0));
        jc_verde.setText("Verde");

        tf_idEmpresa.setEditable(false);

        tf_idConvenio.setEditable(false);

        tf_nomeConvenio.setEditable(false);

        jLabel16.setText("Convênio:");

        tf_idFuncao.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tf_codigo, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                    .addComponent(tf_idPaciente))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bt_buscaPaciente)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_nomePaciente)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tf_data, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tf_idEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_empresaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_idFuncao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_funcaoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tf_idConvenio, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_nomeConvenio))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane1))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jr_alteracaoLeve)
                                .addComponent(jr_normal)
                                .addComponent(jr_alteracaoModerada)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jr_admissional)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jr_periodico)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jr_demissional)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jr_mudancaDeFuncao)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jr_retornoAoTrabalho))
                        .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tf_olhoDireitoComCorrecao, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel14)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tf_olhoEsquerdoComCorrecao, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tf_olhoDireitoSemCorrecao, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tf_olhoEsquerdoSemCorrecao, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jc_verde)
                                .addComponent(jc_amarelo)
                                .addComponent(jc_vermelho))
                            .addGap(289, 289, 289))))
                .addGap(10, 10, 10))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {tf_olhoDireitoComCorrecao, tf_olhoDireitoSemCorrecao, tf_olhoEsquerdoComCorrecao, tf_olhoEsquerdoSemCorrecao});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tf_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_idPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_buscaPaciente)
                    .addComponent(tf_nomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tf_funcaoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(tf_idEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_empresaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_idFuncao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_idConvenio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_nomeConvenio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jr_admissional)
                    .addComponent(jr_periodico)
                    .addComponent(jr_demissional)
                    .addComponent(jr_mudancaDeFuncao)
                    .addComponent(jr_retornoAoTrabalho))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jc_vermelho))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jc_amarelo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tf_olhoDireitoSemCorrecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(tf_olhoEsquerdoSemCorrecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jc_verde))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(tf_olhoDireitoComCorrecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(tf_olhoEsquerdoComCorrecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jr_normal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jr_alteracaoLeve)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jr_alteracaoModerada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {tf_olhoDireitoComCorrecao, tf_olhoEsquerdoComCorrecao});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_sairActionPerformed
        dispose();
    }//GEN-LAST:event_bt_sairActionPerformed

    private void bt_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_editarActionPerformed

        inserir_alterar = 1;
        estadoBotoes("novo");
    }//GEN-LAST:event_bt_editarActionPerformed

    private void bt_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_salvarActionPerformed

        if (verificaCampos()) {
            try {
                String  codigoPaciente = tf_idPaciente.getText();
                
                String idEmpresa = tf_idEmpresa.getText();
                Integer idEmpresaInt = null;
                
                if(!idEmpresa.equals("")){
                    idEmpresaInt = Integer.parseInt(idEmpresa);
                }
                
                String idFuncao = tf_idFuncao.getText();
                Funcao funcao = new Funcao();
                if(!idFuncao.equals("")){
                    funcao.setId(Integer.parseInt(idFuncao));
                }
                Convenio convenio = new Convenio();
                String idconv = tf_idConvenio.getText();
                if (!idconv.equals("")) {
                    convenio.setId(Integer.parseInt(idconv));
                }
                Empresa empresa = new Empresa(idEmpresaInt, null);
                Paciente paciente = new Paciente();
                paciente.setEmpresa(empresa);
                paciente.setConvenio(convenio);
                paciente.setFuncao(funcao);
                if (!codigoPaciente.equals("")) {
                    paciente.setId(Integer.parseInt(codigoPaciente));
                }
                String exameSelecionado  = buttonGroupExame.getSelection().getActionCommand();
                
            
                String conclusaoSelecionado  = buttonGroupConclusao.getSelection().getActionCommand();
                
                String olhoDireitoSemCorrecao = tf_olhoDireitoSemCorrecao.getText();
                String olhoEsquerdoSemCorrecao = tf_olhoEsquerdoSemCorrecao.getText();
                String olhoDireitoComCorrecao = tf_olhoDireitoComCorrecao.getText();
                String olhoEsquerdoComCorrecao = tf_olhoEsquerdoComCorrecao.getText();
                
                Integer olhoDireitoSemCorrecaoInt = null ;
                Integer olhoEsquerdoSemCorrecaoInt  = null ;
                Integer olhoDireitoComCorrecaoInt  = null;
                Integer olhoEsquerdoComCorrecaoInt  = null;
                
                if (!olhoDireitoSemCorrecao.equals("")) {
                    olhoDireitoSemCorrecaoInt = Integer.parseInt(olhoDireitoSemCorrecao);
                }
                if (!olhoEsquerdoSemCorrecao.equals("")) {
                    olhoEsquerdoSemCorrecaoInt = Integer.parseInt(olhoEsquerdoSemCorrecao);
                }
                if (!olhoDireitoComCorrecao.equals("")) {
                    olhoDireitoComCorrecaoInt  = Integer.parseInt(olhoDireitoComCorrecao);
                }
                if (!olhoEsquerdoComCorrecao.equals("")) {
                    olhoEsquerdoComCorrecaoInt = Integer.parseInt(olhoEsquerdoComCorrecao);
                }
                
                String observacao = tf_observacao.getText();
                
                Date dataConve = (Date) converte(data);
                if (inserir_alterar == 0) {
                    
                    CadAcuidadeVisualDAO dao = new CadAcuidadeVisualDAO();
                    AcuidadeVisual av = new AcuidadeVisual(null,paciente,exameSelecionado, olhoDireitoSemCorrecaoInt, 
                            olhoEsquerdoSemCorrecaoInt, olhoDireitoComCorrecaoInt, olhoEsquerdoComCorrecaoInt, 
                            jc_vermelho.isSelected(), jc_amarelo.isSelected(), jc_verde.isSelected(), conclusaoSelecionado, observacao,dataConve);
                    
                    int id = dao.inserir(av);
                    av.setId(id);
                    tf_codigo.setText("" + id);
                    
                }
                
                if (inserir_alterar == 1) {
                    int codigo = Integer.parseInt(tf_codigo.getText());
                    CadAcuidadeVisualDAO dao = new CadAcuidadeVisualDAO();
                    
                    AcuidadeVisual av = new AcuidadeVisual(codigo,paciente, exameSelecionado, 
                            olhoDireitoSemCorrecaoInt, olhoEsquerdoSemCorrecaoInt, olhoDireitoComCorrecaoInt, 
                            olhoEsquerdoComCorrecaoInt, jc_vermelho.isSelected(), jc_amarelo.isSelected(), jc_verde.isSelected(), conclusaoSelecionado, observacao,dataConve);
                    dao.alterar(av);
                    
                }
                inserir_alterar = 0;
                
                estadoBotoes("salvar");
                buscaPorId(tf_codigo.getText());
            } catch (ParseException ex) {
                Logger.getLogger(CadAcuidadeVisual.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_bt_salvarActionPerformed

    private void bt_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_novoActionPerformed
        tf_data.setText(data);
        tf_codigo.setText("");
        estadoBotoes("novo");
        limpaCampos();
        
    }//GEN-LAST:event_bt_novoActionPerformed

    private void bt_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_excluirActionPerformed
        int opcao_escolhida = JOptionPane.showConfirmDialog(null, "Excluir teste de Acuidade Visual " + tf_codigo.getText() + "?", "Exclusão ", JOptionPane.YES_NO_OPTION);
        if (opcao_escolhida == JOptionPane.YES_OPTION) {
            int id = Integer.parseInt(tf_codigo.getText());
            CadAcuidadeVisualDAO dao = new CadAcuidadeVisualDAO();
            boolean excludo = dao.remover(id);
            if (excludo) {
                atualizaTela();
                estadoBotoes("inicial");
            } else {
                JOptionPane.showMessageDialog(null, "AcuidadeVisual não pode ser excluído porque está sendo utilizado em outra tabela!");
            }

        }
    }//GEN-LAST:event_bt_excluirActionPerformed

    private void bt_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cancelarActionPerformed
        String nome = "Deseja realmente cancelar?";
        int opcao_escolhida = JOptionPane.showConfirmDialog(null, nome, "Cancelar ", JOptionPane.YES_NO_OPTION);
        if (opcao_escolhida == JOptionPane.YES_OPTION) {
            inserir_alterar = 0;
            estadoBotoes("cancelar");

        }
    }//GEN-LAST:event_bt_cancelarActionPerformed

    private void bt_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_buscarActionPerformed
        telBuscaAcuidadeVisual();
    }//GEN-LAST:event_bt_buscarActionPerformed

    private void bt_buscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bt_buscarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F2) {
            telBuscaAcuidadeVisual();
        }
    }//GEN-LAST:event_bt_buscarKeyPressed

    private void bt_ultimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ultimoActionPerformed
        atualizaTela();
    }//GEN-LAST:event_bt_ultimoActionPerformed

    private void bt_avançarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_avançarActionPerformed

        CadAcuidadeVisualDAO dao = new CadAcuidadeVisualDAO();
        AcuidadeVisual c = dao.mostrarProximo(Integer.parseInt(tf_codigo.getText()));
        mostrar_dados(c);
    }//GEN-LAST:event_bt_avançarActionPerformed

    private void bt_primeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_primeiroActionPerformed
        CadAcuidadeVisualDAO dao = new CadAcuidadeVisualDAO();
        AcuidadeVisual c = dao.mostrarPrimeiro();
        mostrar_dados(c);
    }//GEN-LAST:event_bt_primeiroActionPerformed

    private void bt_voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_voltarActionPerformed

        CadAcuidadeVisualDAO dao = new CadAcuidadeVisualDAO();
        AcuidadeVisual c = dao.mostrarAnterior(Integer.parseInt(tf_codigo.getText()));
        mostrar_dados(c);
    }//GEN-LAST:event_bt_voltarActionPerformed

    private void bt_buscaPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_buscaPacienteActionPerformed
        telaBuscaPaciente();
    }//GEN-LAST:event_bt_buscaPacienteActionPerformed

    private void tf_idPacienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_idPacienteFocusLost
 if (tf_idPaciente.isEditable()) {
            String id = tf_idPaciente.getText();
            if (id.equals("")) {
                limpPaciente();
            } else {
                buscaPacientePorId(id);
            }
        }
    }//GEN-LAST:event_tf_idPacienteFocusLost

    private void tf_idPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_idPacienteActionPerformed
      bt_buscaPaciente.requestFocus();
    }//GEN-LAST:event_tf_idPacienteActionPerformed

    private void tf_idPacienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_idPacienteKeyPressed
       if (tf_idPaciente.isEditable()) {
            if (evt.getKeyCode() == KeyEvent.VK_F2) {
                telaBuscaPaciente();

            }
        }
    }//GEN-LAST:event_tf_idPacienteKeyPressed

    private void bt_imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_imprimirActionPerformed
         final Progress p = new Progress();
        p.setVisible(true);
        SwingWorker worker = new SwingWorker(){
            @Override
            protected Object doInBackground() throws Exception {
                CadAcuidadeVisualDAO dao = new CadAcuidadeVisualDAO();
                String id = tf_codigo.getText();
                if (!id.equals("")) {
                    dao.imprimirAcuidade(Integer.parseInt(id));
                }
                
                return null;
            }
            @Override
            protected void done() {
                p.setVisible(false);
            }
        };
        worker.execute();
    }//GEN-LAST:event_bt_imprimirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_avançar;
    private javax.swing.JButton bt_buscaPaciente;
    private javax.swing.JButton bt_buscar;
    private javax.swing.JButton bt_cancelar;
    private javax.swing.JButton bt_editar;
    private javax.swing.JButton bt_excluir;
    private javax.swing.JButton bt_imprimir;
    private javax.swing.JButton bt_novo;
    private javax.swing.JButton bt_primeiro;
    private javax.swing.JButton bt_sair;
    private javax.swing.JButton bt_salvar;
    private javax.swing.JButton bt_ultimo;
    private javax.swing.JButton bt_voltar;
    private javax.swing.ButtonGroup buttonGroupConclusao;
    private javax.swing.ButtonGroup buttonGroupExame;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JCheckBox jc_amarelo;
    private javax.swing.JCheckBox jc_verde;
    private javax.swing.JCheckBox jc_vermelho;
    private javax.swing.JRadioButton jr_admissional;
    private javax.swing.JRadioButton jr_alteracaoLeve;
    private javax.swing.JRadioButton jr_alteracaoModerada;
    private javax.swing.JRadioButton jr_demissional;
    private javax.swing.JRadioButton jr_mudancaDeFuncao;
    private javax.swing.JRadioButton jr_normal;
    private javax.swing.JRadioButton jr_periodico;
    private javax.swing.JRadioButton jr_retornoAoTrabalho;
    private javax.swing.JTextField tf_codigo;
    private javax.swing.JTextField tf_data;
    private javax.swing.JTextField tf_empresaPaciente;
    private javax.swing.JTextField tf_funcaoPaciente;
    private javax.swing.JTextField tf_idConvenio;
    private javax.swing.JTextField tf_idEmpresa;
    private javax.swing.JTextField tf_idFuncao;
    private javax.swing.JTextField tf_idPaciente;
    private javax.swing.JTextField tf_nomeConvenio;
    private javax.swing.JTextField tf_nomePaciente;
    private javax.swing.JTextPane tf_observacao;
    private javax.swing.JTextField tf_olhoDireitoComCorrecao;
    private javax.swing.JTextField tf_olhoDireitoSemCorrecao;
    private javax.swing.JTextField tf_olhoEsquerdoComCorrecao;
    private javax.swing.JTextField tf_olhoEsquerdoSemCorrecao;
    // End of variables declaration//GEN-END:variables
public final java.util.Date converte(String dataConsul) throws ParseException {
        DateFormat forma = new SimpleDateFormat("dd/MM/yyyy");
        java.sql.Date dat = new java.sql.Date(forma.parse(dataConsul).getTime());

        return dat;
    }
     private void estadoBotoes(String botao) {
        if ("inicial".equals(botao)) {
            bt_novo.setEnabled(true);
            bt_cancelar.setEnabled(false);
            bt_editar.setEnabled(true);
            bt_buscar.setEnabled(true);
            bt_salvar.setEnabled(false);
            bt_excluir.setEnabled(true);
            bt_primeiro.setEnabled(true);
            bt_voltar.setEnabled(true);
            bt_avançar.setEnabled(true);
            bt_ultimo.setEnabled(true);
            bt_buscaPaciente.setEnabled(false);
            
            
            jr_admissional.setEnabled(false);
            jr_periodico.setEnabled(false);
            jr_demissional.setEnabled(false);
            jr_mudancaDeFuncao.setEnabled(false);
            jr_retornoAoTrabalho.setEnabled(false);
            
            jc_vermelho.setEnabled(false);
            jc_amarelo.setEnabled(false);
            jc_verde.setEnabled(false);
            
            jr_normal.setEnabled(false);
            jr_alteracaoLeve.setEnabled(false);
            jr_alteracaoModerada.setEnabled(false);
            
            tf_codigo.setEditable(true);
            tf_idPaciente.setEditable(false);
            tf_olhoDireitoSemCorrecao.setEditable(false);
            tf_olhoEsquerdoSemCorrecao.setEditable(false);
            tf_olhoDireitoComCorrecao.setEditable(false);
            tf_olhoEsquerdoComCorrecao.setEditable(false);
            tf_observacao.setEditable(false);
            
        }

        if ("novo".equals(botao)) {
            bt_novo.setEnabled(false);
            bt_cancelar.setEnabled(true);
            bt_editar.setEnabled(true);
            bt_buscar.setEnabled(false);
            bt_excluir.setEnabled(false);
            bt_editar.setEnabled(false);
            bt_salvar.setEnabled(true);
            bt_primeiro.setEnabled(false);
            bt_voltar.setEnabled(false);
            bt_avançar.setEnabled(false);
            bt_ultimo.setEnabled(false);
            bt_buscaPaciente.setEnabled(true);
            
          
            jr_admissional.setEnabled(true);
            jr_periodico.setEnabled(true);
            jr_demissional.setEnabled(true);
            jr_mudancaDeFuncao.setEnabled(true);
            jr_retornoAoTrabalho.setEnabled(true);
            
            jc_vermelho.setEnabled(true);
            jc_amarelo.setEnabled(true);
            jc_verde.setEnabled(true);
            
            jr_normal.setEnabled(true);
            jr_alteracaoLeve.setEnabled(true);
            jr_alteracaoModerada.setEnabled(true);
            
            tf_codigo.setEditable(false);
            tf_idPaciente.setEditable(true);
            tf_olhoDireitoSemCorrecao.setEditable(true);
            tf_olhoEsquerdoSemCorrecao.setEditable(true);
            tf_olhoDireitoComCorrecao.setEditable(true);
            tf_olhoEsquerdoComCorrecao.setEditable(true);
            tf_observacao.setEditable(true);
            
        }

        if ("cancelar".equals(botao)) {
            atualizaTela();
            estadoBotoes("inicial");
        }
        if ("salvar".equals(botao)) {
            estadoBotoes("inicial");

        }

        if ("buscar".equals(botao)) {
            estadoBotoes("inicial");

        }

    }
    private void mostrar_dados(AcuidadeVisual a) {
        if (a != null) {
        tf_codigo.setText(a.getId().toString());
        mostra_paciente(a.getPaciente());
        switch (a.getTipoExame()) {
            case "ADMISSÃO":
                jr_admissional.setSelected(true);
                break;
            case "PERIÓDICO":
                jr_periodico.setSelected(true);
                break;
            case "DEMISSIONAL":
                jr_demissional.setSelected(true);
                break;
            case "MUDANÇA DE FUNÇÃO":
                jr_mudancaDeFuncao.setSelected(true);
                break;
            case "RETORNO AO TRABALHO":
                jr_retornoAoTrabalho.setSelected(true);
                break;
            default:
                throw new AssertionError();
        }
        
        tf_olhoDireitoSemCorrecao.setText(a.getOlhoDireitoSemCorrecao().toString());
        tf_olhoEsquerdoSemCorrecao.setText(a.getOlhoEsquerdoSemCorrecao().toString());
        tf_olhoDireitoComCorrecao.setText(a.getOlhoDireitoComCorrecao().toString());
        tf_olhoEsquerdoComCorrecao.setText(a.getOlhoEsquerdoComCorrecao().toString());
        
            if (a.isVermelho()) {
                jc_vermelho.setSelected(true);
            }else{
                jc_vermelho.setSelected(false);
             }
        
            if (a.isAmarelo()) {
                jc_amarelo.setSelected(true);
            }else{
                jc_amarelo.setSelected(false);
             }
        
            if (a.isVerde()) {
                jc_verde.setSelected(true);
            }else{
                jc_verde.setSelected(false);
             }
        
        switch (a.getConclusao()) {
            case "NORMAL, SEM ALTERAÇOES PARA ATIVIDADES COMUNS.":
                jr_normal.setSelected(true);
                break;
            case "ALTERAÇÃO LEVE, SEM RESTRIÇÕES PARA ATIVIDADES COMUNS.":
                jr_alteracaoLeve.setSelected(true);
                break;
            case "ALTERAÇÃO MODERADA A SEVERA. SUGERE-SE AVALIAÇÃO OU CONDUTA OFTALMOLÓGICA.":
                jr_alteracaoModerada.setSelected(true);
                break;
            default:
                throw new AssertionError();
        }
        
        tf_observacao.setText(a.getObservacao());
        tf_data.setText(formato.format(a.getData()));
        
        }
    }

    private void atualizaTela() {
        CadAcuidadeVisualDAO dao = new CadAcuidadeVisualDAO();
        AcuidadeVisual av = dao.mostrarUltimo();
        mostrar_dados(av);
    }

    private void telBuscaAcuidadeVisual() {
        BuscaAcuidadeVisual pcp = new BuscaAcuidadeVisual(null, true);
        pcp.getRootPane().setWindowDecorationStyle(JRootPane.COLOR_CHOOSER_DIALOG);
        pcp.setVisible(true);

        if (pcp.okselecionado()) {

            AcuidadeVisual av = pcp.retornCliSele();
            mostrar_dados(av);
        }

    }

    private void buscaPorId(String id) {
        CadAcuidadeVisualDAO dao = new CadAcuidadeVisualDAO();
        AcuidadeVisual av = dao.procuraPorID(Integer.parseInt(id));
        if (av != null) {
             mostrar_dados(av);
        }else{
            JOptionPane.showMessageDialog(null, "Acuidade não encontrada");
        }
       
        }
    private void limpaCampos(){
        limpPaciente();
        tf_idPaciente.setText("");
        buttonGroupExame.clearSelection();
        jc_vermelho.setSelected(false);
        jc_amarelo.setSelected(false);
        jc_verde.setSelected(false);
        buttonGroupConclusao.clearSelection();
        tf_olhoDireitoSemCorrecao.setText("");
        tf_olhoEsquerdoSemCorrecao.setText("");
        tf_olhoDireitoComCorrecao.setText("");
        tf_olhoEsquerdoComCorrecao.setText("");
        tf_observacao.setText("");
    }
    private boolean verificaCampos(){
        boolean retorno = true;
        if (tf_idPaciente.getText().equals("")) {
            retorno = false;
            JOptionPane.showMessageDialog(null, "Selecione um Paciente!");
        }else if (buttonGroupExame.getSelection() == null) {
            retorno = false;
            JOptionPane.showMessageDialog(null, "Selecione o tipo de exame!");
        }
        else if (buttonGroupConclusao.getSelection() == null) {
            retorno = false;
            JOptionPane.showMessageDialog(null, "Selecione a conclusão!");
        }
       
        return retorno;
    }

    private void telaBuscaPaciente() {
        BuscaPacientesModal telBuscClie = new BuscaPacientesModal(null, true);
        telBuscClie.setVisible(true);

        if (telBuscClie.okselecionado()) {
            Paciente p = telBuscClie.retornCliSele();
            if (p != null) {
                mostra_paciente(p);

            }
        } 
    }

    private void mostra_paciente(Paciente p) {
       if (p != null) {
            tf_idPaciente.setText(p.getId().toString());
            tf_nomePaciente.setText(p.getNome());
            tf_idFuncao.setText(p.getFuncao().getId().toString());
            tf_funcaoPaciente.setText(p.getFuncao().getNome());
            tf_idEmpresa.setText(p.getEmpresa().getId().toString());
            tf_empresaPaciente.setText(p.getEmpresa().getFantasia());
            tf_idConvenio.setText(p.getConvenio().getId().toString());
            tf_nomeConvenio.setText(p.getConvenio().getDsConvenio());
        }
    }

    private void buscaPacientePorId(String id) {
        ICadPacienteDAO dao = new CadPacienteDAO();

        Paciente client = dao.buscaPacientePorId(Integer.parseInt(id));
        if (client != null) {
            mostra_paciente(client);

        } else {
            JOptionPane.showMessageDialog(null, "paciente não cadastrado!", "Informação", JOptionPane.INFORMATION_MESSAGE);
            tf_idPaciente.requestFocus();

        }
    }
    
      public void limpPaciente() {
        tf_nomePaciente.setText("");
        tf_idFuncao.setText("");
        tf_funcaoPaciente.setText("");
        tf_idEmpresa.setText("");
        tf_empresaPaciente.setText("");
        tf_idConvenio.setText("");
        tf_nomeConvenio.setText("");
       
    }
}

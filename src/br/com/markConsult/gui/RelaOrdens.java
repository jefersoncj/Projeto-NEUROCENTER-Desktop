/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.markConsult.gui;


import br.com.markConsult.dao.CadEmpresaDAO;
import br.com.markConsult.dao.CadPacienteDAO;
import br.com.markConsult.entidades.Empresa;
import br.com.markConsult.entidades.MinhaEmpresa;
import br.com.markConsult.entidades.Paciente;
import br.com.markConsult.entidades.Sessao;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/**
 *
 * @author jeferson
 */
public class RelaOrdens extends javax.swing.JInternalFrame {
private String paciente;
private String usuario;
private String conve;
private String status;
private String condPag;
private String ordem;
private String data = (new java.text.SimpleDateFormat("dd/MM/yyyy").format(new java.util.Date(System.currentTimeMillis())));

    /**
     * Creates new form RelaConsultas
     */
    public RelaOrdens() {
        initComponents();
        Calendar data1 = new GregorianCalendar();
        int priDiaMes = data1.getActualMinimum(Calendar.DAY_OF_MONTH);  
        data1.set(Calendar.DAY_OF_MONTH, priDiaMes);
        
     Date d = null;
    try {
         d = converte(new SimpleDateFormat("dd/MM/yyyy").format(data1.getTime()));
    } catch (ParseException ex) {
        Logger.getLogger(RelaOrdens.class.getName()).log(Level.SEVERE, null, ex);
    }
        Date dt = null;
    try {
        dt = converte(data);
    } catch (ParseException ex) {
        Logger.getLogger(RelaOrdens.class.getName()).log(Level.SEVERE, null, ex);
    }
        tf_dataIni.setDate(d);
        tf_dataFin.setDate(dt);
        
         jC_empresa.getEditor().addActionListener((ActionEvent e) -> {
            buscaEmpresa();
            jC_empresa.setSelectedItem(e.getActionCommand());
           
        });             
		jC_empresa.addItemListener((ItemEvent e) -> {
                  
        });
                
        jC_paciente.getEditor().addActionListener((ActionEvent e) -> {
            busaPacientes();
            jC_paciente.setSelectedItem(e.getActionCommand());
            
           
        });             
		jC_paciente.addItemListener((ItemEvent e) -> {
                  
        });
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jC_paciente = new javax.swing.JComboBox();
        tf_dataIni = new com.toedter.calendar.JDateChooser("dd/MM/yyyy" , "##/##/####" , ' ');
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jC_empresa = new javax.swing.JComboBox();
        tf_dataFin = new com.toedter.calendar.JDateChooser("dd/MM/yyyy" , "##/##/####" , ' ');
        bt_gerar = new javax.swing.JButton();
        bt_cancelar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Relatório de ordens");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/help.png"))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Relatório de Ordens", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jC_paciente.setEditable(true);
        jC_paciente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos" }));
        jC_paciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_pacienteActionPerformed(evt);
            }
        });

        jLabel4.setText("Paciente:");

        jLabel3.setText("Período final:");

        jLabel1.setText("Período inicial:");

        jLabel8.setText("Empresa:");

        jC_empresa.setEditable(true);
        jC_empresa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos" }));
        jC_empresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jC_empresaActionPerformed(evt);
            }
        });

        bt_gerar.setText("Gerar");
        bt_gerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_gerarActionPerformed(evt);
            }
        });

        bt_cancelar.setText("Cancelar");
        bt_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jC_paciente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jC_empresa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(tf_dataIni, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tf_dataFin, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bt_cancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_gerar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tf_dataFin, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(tf_dataIni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(4, 4, 4)
                .addComponent(jC_empresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(1, 1, 1)
                .addComponent(jC_paciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_gerar)
                    .addComponent(bt_cancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jC_pacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_pacienteActionPerformed
       jC_paciente.showPopup();  

    }//GEN-LAST:event_jC_pacienteActionPerformed

    private void jC_empresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jC_empresaActionPerformed
        jC_empresa.showPopup(); 
    }//GEN-LAST:event_jC_empresaActionPerformed

    private void bt_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cancelarActionPerformed
        dispose();
    }//GEN-LAST:event_bt_cancelarActionPerformed

    private void bt_gerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_gerarActionPerformed
        final Progress p = new Progress();
        p.setVisible(true);
        SwingWorker worker = new SwingWorker(){
            @Override
            protected Object doInBackground() throws Exception {
                gerarRel(); // meu processo demorado
                return null;
            }
            @Override
            protected void done() {
                p.setVisible(false);
            }
        };
        worker.execute();

    }//GEN-LAST:event_bt_gerarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_cancelar;
    private javax.swing.JButton bt_gerar;
    private javax.swing.JComboBox jC_empresa;
    private javax.swing.JComboBox jC_paciente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private com.toedter.calendar.JDateChooser tf_dataFin;
    private com.toedter.calendar.JDateChooser tf_dataIni;
    // End of variables declaration//GEN-END:variables

    
    public final java.util.Date converte(String dataConsul) throws ParseException {
        DateFormat forma = new SimpleDateFormat("dd/MM/yyyy");
        java.sql.Date dat = new java.sql.Date(forma.parse(dataConsul).getTime());

        return dat;
    }
    
    private void busaPacientes() {

        Object digito = jC_paciente.getEditor().getItem();
        jC_paciente.removeAllItems();
        String toUpperCase = digito.toString().toUpperCase();
        System.out.println(digito.toString());

        if (!toUpperCase.equals("")) {

            CadPacienteDAO dao2 = new CadPacienteDAO();
            List<Paciente> listaPacientes = dao2.buscaPaciente(toUpperCase, 'e');
                jC_paciente.addItem("Todos");
            for (Paciente paciente : listaPacientes) {
                
                if (listaPacientes.isEmpty()) {
                    jC_paciente.removeAllItems();
                } else {
                    
                    jC_paciente.addItem(paciente);
                }

            }
        }
    }
    
    private void buscaEmpresa() {
        Object digito = jC_empresa.getEditor().getItem();
        jC_empresa.removeAllItems();
        String toUpperCase = digito.toString().toUpperCase();

        if (!toUpperCase.equals("")) {

            CadEmpresaDAO dao = new CadEmpresaDAO();
            List<Empresa> listaEmpresa = dao.buscaEmpresa(toUpperCase, 'e');

            for (Empresa empresa : listaEmpresa) {

                if (listaEmpresa.isEmpty()) {
                    jC_empresa.removeAllItems();
                } else {

                    jC_empresa.addItem(empresa);
                }

            }
        }

    }

    
    public void gerarRel(){
        
   String empresa = "" ;
   String paciente = "";
   
        try {
            
       
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        java.util.Date data1 =  tf_dataIni.getDate() ;
        java.util.Date data2 = tf_dataFin.getDate();
        String dat1= formato.format(data1);
        String dat2= formato.format(data2);
        Date dataIni =  (Date) converte(dat1);
        Date dataFin = (Date) converte(dat2);
        
            if (jC_empresa.getSelectedIndex() > 0) {
                Empresa emp =(Empresa) jC_empresa.getSelectedItem();
                empresa = "AND ordem_exames.id_empresa "+"='"+emp.getId()+"'";
            }
            
            if (jC_paciente.getSelectedIndex() > 0) {
                Paciente pa =(Paciente) jC_paciente.getSelectedItem();
                paciente = "AND ordem_exames.id_paciente "+"='"+pa.getId()+"'";
            }
//        int st = cb_stat.getSelectedIndex();
//        if (cb_paciente.getSelectedIndex() == 0) {
//            pa = "";
//        }else{
//            
//            pa = "and id_paciente = '"+paciente+"' ";
//            System.out.println(paciente);
//        }
//        if (st == 0) {
//            status = "and status in (1,2,3,4,5,6)";
//        
//        }else{
//            status = "and status in ("+st+")";
//        }
//        
//        if (cb_conv.getSelectedIndex() == 0) {
//            conv = "";
//        }else{
//            conv = "and convenios.id = '"+conve+"' ";
//        }
//        if (cb_condPagt.getSelectedIndex() == 0) {
//            condp = "";
//        }else{
//            condp = "and cond_pagto.id = '"+condPag+"' ";
//        }if (cb_medico.getSelectedIndex() == 0) {
//            med = "";
//        }else{
//            med = "and usuarios.id = '"+usuario+"' ";
//        }
//            switch (cb_ordem.getSelectedIndex()) {
//                case 0:
//                    ordem = "data_consulta";
//                    break;
//                case 1:
//                    ordem = "nome";
//                    break;
//                case 2:
//                    ordem = "ds_convenio";
//                    break;
//                case 3:
//                    ordem = "descricao";
//                    break;
//               case 4:
//                    ordem = "ds_status";
//                    break;
//                default:
//                    ordem = "data_consulta";
//            }
        
            MinhaEmpresa e = Sessao.getInstance().getMinhaEmpresa();
        CadPacienteDAO dao = new CadPacienteDAO();
        dao.ConectRelatorio2(e.getId(),(java.sql.Date) dataIni, (java.sql.Date) dataFin,empresa, paciente);
    } catch (ParseException ex) {
       
             JOptionPane.showMessageDialog(null, "Data inválida!");
    } 
    }
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.markConsult.gui;

import br.com.markConsult.classesMetodos.FixedLengthDocument;
import br.com.markConsult.classesMetodos.FixedLengthDocument1;
import br.com.markConsult.classesMetodos.IntegerDocument;
import br.com.markConsult.dao.CadClinicaDAO;
import br.com.markConsult.entidades.Cep;
import br.com.markConsult.entidades.Clinica;
import br.com.markConsult.entidades.LogoClinica;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.sql.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.InputMismatchException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author jeferson
 */
public class CadClinica extends javax.swing.JInternalFrame {

    int inserir_alterar = 0;
    String endImage;

    /**
     * Creates new form CadCliente
     */
    public CadClinica() {
        initComponents();
        estadoBotoes("inicial");

        tf_codigo.setDocument(new IntegerDocument(10));
        tf_fantasia.setDocument(new FixedLengthDocument(120));
        tf_razao.setDocument(new FixedLengthDocument(120));
        tf_municipio.setDocument(new FixedLengthDocument(80));
        tf_uf.setDocument(new FixedLengthDocument(2));
        tf_logradouro.setDocument(new FixedLengthDocument(120));
        tf_numero.setDocument(new FixedLengthDocument(10));
        tf_bairro.setDocument(new FixedLengthDocument(65));
        jf_foneFixo.setDocument(new FixedLengthDocument(25));
        tf_celular1.setDocument(new FixedLengthDocument(25));
        tf_celular2.setDocument(new FixedLengthDocument(25));
        jf_cpf_cnpj.setDocument(new FixedLengthDocument(18));
        tf_email.setDocument(new FixedLengthDocument1(80));

        atualizaTela();
        bt_buscar.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        tf_celular2 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        tf_uf = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        tf_municipio = new javax.swing.JTextField();
        tf_razao = new javax.swing.JTextField();
        tf_codigo_cep = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter data= new javax.swing.text.MaskFormatter("#####-###");
            tf_codigo_cep = new javax.swing.JFormattedTextField(data);
        }
        catch (Exception e){
        }
        jLabel5 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        tf_codigo = new javax.swing.JTextField();
        tf_bairro = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        tf_celular1 = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jf_cpf_cnpj = new javax.swing.JFormattedTextField();
        tf_numero = new javax.swing.JTextField();
        jf_foneFixo = new javax.swing.JFormattedTextField();
        tf_email = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        tf_logradouro = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tf_fantasia = new javax.swing.JTextField();
        bt_buscaImage = new javax.swing.JButton();
        tf_imagem = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        LB_Foto = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        bt_sair = new javax.swing.JButton();
        bt_editar = new javax.swing.JButton();
        bt_salvar = new javax.swing.JButton();
        bt_novo = new javax.swing.JButton();
        bt_excluir = new javax.swing.JButton();
        bt_cancelar = new javax.swing.JButton();
        bt_buscar = new javax.swing.JButton();
        bt_ultimo = new javax.swing.JButton();
        bt_avancar = new javax.swing.JButton();
        bt_primeiro = new javax.swing.JButton();
        bt_voltar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Clínica");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/help.png"))); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro de Clínica", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jLabel29.setText("Celular:");

        jLabel12.setText("Fone Fixo:");

        jLabel13.setText("Celular:");

        jLabel27.setText("UF:");

        jLabel26.setText("Município:");

        jLabel5.setText("Cep:");

        jLabel18.setText("Código:");

        jLabel19.setText("Número:");

        tf_codigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_codigoFocusLost(evt);
            }
        });
        tf_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_codigoActionPerformed(evt);
            }
        });
        tf_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_codigoKeyPressed(evt);
            }
        });

        jLabel20.setText("Bairro:");

        jLabel16.setText("Email:");

        jLabel22.setText("CNPJ:");

        jLabel24.setText("Razão Social:");

        jf_cpf_cnpj.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jf_cpf_cnpj.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jf_cpf_cnpjFocusLost(evt);
            }
        });
        jf_cpf_cnpj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jf_cpf_cnpjMouseClicked(evt);
            }
        });

        jLabel17.setText("Logradouro:");

        jLabel7.setText("Fantasia:");

        bt_buscaImage.setText("...");
        bt_buscaImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_buscaImageActionPerformed(evt);
            }
        });

        tf_imagem.setEnabled(false);

        jLabel1.setText("Logo:");

        LB_Foto.setBackground(new java.awt.Color(255, 255, 255));
        LB_Foto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel22)
                    .addComponent(jLabel7)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(tf_bairro, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addGap(6, 6, 6)
                        .addComponent(tf_email))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jf_cpf_cnpj, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jf_foneFixo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_celular1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_celular2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(bt_buscaImage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_imagem))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(tf_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(tf_logradouro, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel19)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tf_numero))
                                    .addComponent(tf_razao, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_fantasia)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(tf_codigo_cep, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel26)
                                        .addGap(6, 6, 6)
                                        .addComponent(tf_municipio)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel27)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tf_uf, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(LB_Foto, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jf_foneFixo, tf_celular1, tf_celular2});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(tf_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(tf_fantasia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_razao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_codigo_cep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26)
                            .addComponent(tf_municipio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27)
                            .addComponent(tf_uf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_logradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_numero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)))
                    .addComponent(LB_Foto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_bairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel16)
                    .addComponent(tf_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(tf_celular2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jf_foneFixo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_celular1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel22)
                    .addComponent(jf_cpf_cnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_buscaImage)
                    .addComponent(tf_imagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setToolTipText("");

        bt_sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/Log-Out-icon.png"))); // NOI18N
        bt_sair.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sair", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_sairActionPerformed(evt);
            }
        });

        bt_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/Action-edit-icon.png"))); // NOI18N
        bt_editar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Editar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_editarActionPerformed(evt);
            }
        });

        bt_salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/App-floppy-icon.png"))); // NOI18N
        bt_salvar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Salvar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_salvar.setIconTextGap(2);
        bt_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_salvarActionPerformed(evt);
            }
        });

        bt_novo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/new-file-icon.png"))); // NOI18N
        bt_novo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Novo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_novoActionPerformed(evt);
            }
        });

        bt_excluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/trash-icon.png"))); // NOI18N
        bt_excluir.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Excluir", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_excluir.setIconTextGap(2);
        bt_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_excluirActionPerformed(evt);
            }
        });

        bt_cancelar.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        bt_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/Extras-Close-icon.png"))); // NOI18N
        bt_cancelar.setAutoscrolls(true);
        bt_cancelar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cancelar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_cancelar.setIconTextGap(2);
        bt_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cancelarActionPerformed(evt);
            }
        });

        bt_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/Search-icon.png"))); // NOI18N
        bt_buscar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_buscarActionPerformed(evt);
            }
        });
        bt_buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bt_buscarKeyPressed(evt);
            }
        });

        bt_ultimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/hide-right-icon.png"))); // NOI18N
        bt_ultimo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ultimo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_ultimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ultimoActionPerformed(evt);
            }
        });

        bt_avancar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/navigate-right-icon.png"))); // NOI18N
        bt_avancar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Avançar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_avancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_avancarActionPerformed(evt);
            }
        });

        bt_primeiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/hide-left-icon.png"))); // NOI18N
        bt_primeiro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Primeiro", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_primeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_primeiroActionPerformed(evt);
            }
        });

        bt_voltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/navigate-left-icon.png"))); // NOI18N
        bt_voltar.setToolTipText("");
        bt_voltar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Voltar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Arial", 0, 11))); // NOI18N
        bt_voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_voltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bt_primeiro, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_voltar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_avancar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_ultimo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_novo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_sair, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bt_buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_excluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_novo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_sair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_editar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_salvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_ultimo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_avancar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_voltar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_primeiro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_codigoActionPerformed

    }//GEN-LAST:event_tf_codigoActionPerformed

    private void tf_codigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_codigoFocusLost
        if (tf_codigo.isEditable()) {
            String id = tf_codigo.getText();
            if (id.equals("")) {
                atualizaTela();
            } else {
                buscaPorId(id);
            }
        }
    }//GEN-LAST:event_tf_codigoFocusLost

    private void tf_codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_codigoKeyPressed
        if (tf_codigo.isEditable()) {
            if (evt.getKeyCode() == KeyEvent.VK_F2) {
                telBuscEmp();

            }
        }

    }//GEN-LAST:event_tf_codigoKeyPressed

    private void jf_cpf_cnpjMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jf_cpf_cnpjMouseClicked
        String remove = removerMascara(jf_cpf_cnpj.getText());
        jf_cpf_cnpj.setText(remove);
    }//GEN-LAST:event_jf_cpf_cnpjMouseClicked

    private void bt_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_sairActionPerformed
        dispose();
    }//GEN-LAST:event_bt_sairActionPerformed

    private void bt_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_editarActionPerformed

        inserir_alterar = 1;
        estadoBotoes("novo");
    }//GEN-LAST:event_bt_editarActionPerformed

    private void bt_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_salvarActionPerformed

        String fantasia = tf_fantasia.getText();
        String razao = tf_razao.getText();
        String email = tf_email.getText();
        String nuCep = tf_codigo_cep.getText();
        String municipio = tf_municipio.getText();
        String uf = tf_uf.getText();
        String logradouro = tf_logradouro.getText();
        String numero = tf_numero.getText();
        String bairro = tf_bairro.getText();
        String cnpj = jf_cpf_cnpj.getText();
        String fonefixo = jf_foneFixo.getText();
        String celular1 = tf_celular1.getText();
        String celular2 = tf_celular2.getText();
        Cep cep = new Cep(null, nuCep, logradouro, bairro, municipio, uf);

        LogoClinica logoClinica;

        String nome = tf_imagem.getText();
        logoClinica = new LogoClinica(nome, null);

        if (inserir_alterar == 0) {

            CadClinicaDAO dao = new CadClinicaDAO();
            Clinica clinica = new Clinica(null, fantasia, razao, email, numero, cnpj, fonefixo, celular1, celular2, cep, logoClinica);

            int id = dao.inseClinica(clinica);
            clinica.setId(id);
            tf_codigo.setText("" + id);

        }

        if (inserir_alterar == 1) {
            int codigo = Integer.parseInt(tf_codigo.getText());
            CadClinicaDAO dao = new CadClinicaDAO();
            Clinica clinica = new Clinica(codigo, fantasia, razao, email, numero, cnpj, fonefixo, celular1, celular2, cep, logoClinica);
            dao.altClinica(clinica);
        }
        inserir_alterar = 0;

        estadoBotoes("salvar");


    }//GEN-LAST:event_bt_salvarActionPerformed

    private void bt_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_novoActionPerformed
        BufferedImage imagem = null;
        try {
            imagem = ImageIO.read(new File("imagem/logoMark.png")); //carrega a imagem real num buffer  
        } catch (IOException ex) {
            Logger.getLogger(CadClinica.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedImage aux = new BufferedImage(179, 108, imagem.getType());//cria um buffer auxiliar com o tamanho desejado    
        Graphics2D g = aux.createGraphics();//pega a classe graphics do aux para edicao    
        AffineTransform at = AffineTransform.getScaleInstance((double) 179 / imagem.getWidth(), (double) 108 / imagem.getHeight());//cria a transformacao    
        g.drawRenderedImage(imagem, at);//pinta e transforma a imagem real no auxiliar    
        LB_Foto.setIcon(new ImageIcon(aux));//seta no jlabel  
        tf_imagem.setText("/markconsultas/imagem/logoMark.png");

        tf_codigo.setText("");
        tf_fantasia.setText("");
        tf_razao.setText("");
        tf_email.setText("");
        tf_codigo_cep.setText("");
        tf_municipio.setText("");
        tf_uf.setText("");
        tf_logradouro.setText("");
        tf_numero.setText("");
        tf_bairro.setText("");
        jf_cpf_cnpj.setText(null);
        jf_foneFixo.setText("");
        tf_celular1.setText("");
        tf_celular2.setText("");
        tf_fantasia.requestFocus();
        estadoBotoes("novo");
    }//GEN-LAST:event_bt_novoActionPerformed

    private void bt_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_excluirActionPerformed
        int opcao_escolhida = JOptionPane.showConfirmDialog(null, "Excluir " + tf_razao.getText() + "?", "Exclusão ", JOptionPane.YES_NO_OPTION);
        if (opcao_escolhida == JOptionPane.YES_OPTION) {
            int id = Integer.parseInt(tf_codigo.getText());
            CadClinicaDAO dao = new CadClinicaDAO();
            boolean excludo = dao.rmClinica(id);
            if (excludo) {
                atualizaTela();
                estadoBotoes("inicial");
            } else {
                JOptionPane.showMessageDialog(null, "Clinica não pode ser excluído porque está sendo utilizado em outra tabela!");
            }

        }
    }//GEN-LAST:event_bt_excluirActionPerformed

    private void bt_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cancelarActionPerformed
        String nome = "Deseja realmente cancelar?";
        int opcao_escolhida = JOptionPane.showConfirmDialog(null, nome, "Cancelar ", JOptionPane.YES_NO_OPTION);
        if (opcao_escolhida == JOptionPane.YES_OPTION) {
            inserir_alterar = 0;
            estadoBotoes("cancelar");

        }
    }//GEN-LAST:event_bt_cancelarActionPerformed

    private void bt_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_buscarActionPerformed
        telBuscEmp();
    }//GEN-LAST:event_bt_buscarActionPerformed

    private void bt_buscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bt_buscarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F2) {
            telBuscEmp();
        }
    }//GEN-LAST:event_bt_buscarKeyPressed

    private void bt_ultimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ultimoActionPerformed
        atualizaTela();
    }//GEN-LAST:event_bt_ultimoActionPerformed

    private void bt_avancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_avancarActionPerformed

        CadClinicaDAO dao = new CadClinicaDAO();
        Clinica c = dao.mostrarProximo(Integer.parseInt(tf_codigo.getText()));
        mostrar_dados(c);
    }//GEN-LAST:event_bt_avancarActionPerformed

    private void bt_primeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_primeiroActionPerformed
        CadClinicaDAO dao = new CadClinicaDAO();
        Clinica c = dao.mostrarPrimeiro();
        mostrar_dados(c);
    }//GEN-LAST:event_bt_primeiroActionPerformed

    private void bt_voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_voltarActionPerformed

        CadClinicaDAO dao = new CadClinicaDAO();
        Clinica c = dao.mostrarAnterior(Integer.parseInt(tf_codigo.getText()));
        mostrar_dados(c);

    }//GEN-LAST:event_bt_voltarActionPerformed

    private void bt_buscaImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_buscaImageActionPerformed
//Criação do FileChooser    
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Importar imagem");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("JPG & PNG Images", new String[]{"jpg", "png"});
        fileChooser.setFileFilter(filter);
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setMultiSelectionEnabled(false);

        File file = null;
        while (file == null) {
            int option = fileChooser.showOpenDialog(this);

            if (option != JFileChooser.APPROVE_OPTION) {
                return;
            }

            file = fileChooser.getSelectedFile();
            if (!file.getName().endsWith(".jpg") && !file.getName().endsWith(".png")) {
                JOptionPane.showMessageDialog(this, "arquivo nao suportado");
                file = null;
            }
        }
                BufferedImage imagem = null;
                try {
                    imagem = ImageIO.read(file); //carrega a imagem real num buffer  
                } catch (IOException ex) {
                    Logger.getLogger(CadClinica.class.getName()).log(Level.SEVERE, null, ex);
                }
                BufferedImage aux = new BufferedImage(179, 108, imagem.getType());//cria um buffer auxiliar com o tamanho desejado    
                Graphics2D g = aux.createGraphics();//pega a classe graphics do aux para edicao    
                AffineTransform at = AffineTransform.getScaleInstance((double) 179 / imagem.getWidth(), (double) 108 / imagem.getHeight());//cria a transformacao    
                g.drawRenderedImage(imagem, at);//pinta e transforma a imagem real no auxiliar    
                LB_Foto.setIcon(new ImageIcon(aux));//seta no jlabel  
                //LB_Foto.setIcon(new ImageIcon(fileChooser.getSelectedFile().getPath()));   
                tf_imagem.setText(fileChooser.getSelectedFile().getPath());
                endImage = fileChooser.getSelectedFile().getPath();

            

//Abre a caixa para escolher a imagem  
    }//GEN-LAST:event_bt_buscaImageActionPerformed

    private void jf_cpf_cnpjFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jf_cpf_cnpjFocusLost
                   String cpf1 = removerMascara(jf_cpf_cnpj.getText());
                if (!cpf1.equals("")) {

                    if (cpf1.length() > 14 || cpf1.length() < 14) {
                        JOptionPane.showMessageDialog(null, "CNPJ " + cpf1 + " inválido");
                        jf_cpf_cnpj.requestFocus();

                    } else if (cpf1.length() == 14) {
                        boolean resultado = isCNPJ(cpf1);
                        if (resultado == false) {
                            JOptionPane.showMessageDialog(null, "CNPJ " + cpf1 + " não é válido");
                            jf_cpf_cnpj.requestFocus();
                        } else {
                            jf_cpf_cnpj.setText(imprimeCNPJ(cpf1));
                        }
                    }
                }
    }//GEN-LAST:event_jf_cpf_cnpjFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LB_Foto;
    private javax.swing.JButton bt_avancar;
    private javax.swing.JButton bt_buscaImage;
    private javax.swing.JButton bt_buscar;
    private javax.swing.JButton bt_cancelar;
    private javax.swing.JButton bt_editar;
    private javax.swing.JButton bt_excluir;
    private javax.swing.JButton bt_novo;
    private javax.swing.JButton bt_primeiro;
    private javax.swing.JButton bt_sair;
    private javax.swing.JButton bt_salvar;
    private javax.swing.JButton bt_ultimo;
    private javax.swing.JButton bt_voltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JFormattedTextField jf_cpf_cnpj;
    private javax.swing.JFormattedTextField jf_foneFixo;
    private javax.swing.JTextField tf_bairro;
    private javax.swing.JFormattedTextField tf_celular1;
    private javax.swing.JTextField tf_celular2;
    private javax.swing.JTextField tf_codigo;
    private javax.swing.JTextField tf_codigo_cep;
    private javax.swing.JTextField tf_email;
    private javax.swing.JTextField tf_fantasia;
    private javax.swing.JTextField tf_imagem;
    private javax.swing.JTextField tf_logradouro;
    private javax.swing.JTextField tf_municipio;
    private javax.swing.JTextField tf_numero;
    private javax.swing.JTextField tf_razao;
    private javax.swing.JTextField tf_uf;
    // End of variables declaration//GEN-END:variables
 public static String formatarString(String texto, String mascara) throws ParseException {
        MaskFormatter mf = new MaskFormatter(mascara);
        mf.setValueContainsLiteralCharacters(false);
        return mf.valueToString(texto);

    }

   public static boolean isCNPJ(String CNPJ) {
// considera-se erro CNPJ's formados por uma sequencia de numeros iguais
        if (CNPJ.equals("00000000000000") || CNPJ.equals("11111111111111")
                || CNPJ.equals("22222222222222") || CNPJ.equals("33333333333333")
                || CNPJ.equals("44444444444444") || CNPJ.equals("55555555555555")
                || CNPJ.equals("66666666666666") || CNPJ.equals("77777777777777")
                || CNPJ.equals("88888888888888") || CNPJ.equals("99999999999999")
                || (CNPJ.length() != 14)) {
            return (false);
        }

        char dig13, dig14;
        int sm, i, r, num, peso;

// "try" - protege o cÃ³digo para eventuais erros de conversao de tipo (int)
        try {
// Calculo do 1o. Digito Verificador
            sm = 0;
            peso = 2;
            for (i = 11; i >= 0; i--) {
// converte o i-Ã©simo caractere do CNPJ em um nÃºmero:
// por exemplo, transforma o caractere '0' no inteiro 0
// (48 eh a posiÃ§Ã£o de '0' na tabela ASCII)
                num = (int) (CNPJ.charAt(i) - 48);
                sm = sm + (num * peso);
                peso = peso + 1;
                if (peso == 10) {
                    peso = 2;
                }
            }

            r = sm % 11;
            if ((r == 0) || (r == 1)) {
                dig13 = '0';
            } else {
                dig13 = (char) ((11 - r) + 48);
            }

// Calculo do 2o. Digito Verificador
            sm = 0;
            peso = 2;
            for (i = 12; i >= 0; i--) {
                num = (int) (CNPJ.charAt(i) - 48);
                sm = sm + (num * peso);
                peso = peso + 1;
                if (peso == 10) {
                    peso = 2;
                }
            }

            r = sm % 11;
            if ((r == 0) || (r == 1)) {
                dig14 = '0';
            } else {
                dig14 = (char) ((11 - r) + 48);
            }

// Verifica se os dÃ­gitos calculados conferem com os dÃ­gitos informados.
            if ((dig13 == CNPJ.charAt(12)) && (dig14 == CNPJ.charAt(13))) {
                return (true);
            } else {
                return (false);
            }
        } catch (InputMismatchException erro) {
            return (false);
        }
    }

    public static String imprimeCNPJ(String CNPJ) {
// mÃ¡scara do CNPJ: 99.999.999.9999-99
        return (CNPJ.substring(0, 2) + "." + CNPJ.substring(2, 5) + "."
                + CNPJ.substring(5, 8) + "/" + CNPJ.substring(8, 12) + "-"
                + CNPJ.substring(12, 14));
    }

    public String removerMascara(String str) {
        return str.replaceAll("\\D", "");

    }

    private void estadoBotoes(String botao) {
        if ("inicial".equals(botao)) {
            bt_novo.setEnabled(true);
            bt_cancelar.setEnabled(false);
            bt_editar.setEnabled(true);
            bt_buscar.setEnabled(true);
            bt_salvar.setEnabled(false);
            bt_excluir.setEnabled(true);
            bt_primeiro.setEnabled(true);
            bt_voltar.setEnabled(true);
            bt_avancar.setEnabled(true);
            bt_ultimo.setEnabled(true);
            bt_buscaImage.setEnabled(false);

            tf_codigo.setEditable(true);
            tf_fantasia.setEditable(false);
            tf_razao.setEditable(false);
            tf_email.setEditable(false);
            tf_codigo_cep.setEditable(false);
            tf_municipio.setEditable(false);
            tf_uf.setEditable(false);
            tf_logradouro.setEditable(false);
            tf_numero.setEditable(false);
            tf_bairro.setEditable(false);
            jf_cpf_cnpj.setEditable(false);
            jf_foneFixo.setEditable(false);
            tf_celular1.setEditable(false);
            tf_celular2.setEditable(false);

        }

        if ("novo".equals(botao)) {
            bt_novo.setEnabled(false);
            bt_cancelar.setEnabled(true);
            bt_editar.setEnabled(true);
            bt_buscar.setEnabled(false);
            bt_excluir.setEnabled(false);
            bt_editar.setEnabled(false);
            bt_salvar.setEnabled(true);
            bt_primeiro.setEnabled(false);
            bt_voltar.setEnabled(false);
            bt_avancar.setEnabled(false);
            bt_ultimo.setEnabled(false);
            bt_buscaImage.setEnabled(true);

            tf_codigo.setEditable(false);
            tf_fantasia.setEditable(true);
            tf_razao.setEditable(true);
            tf_email.setEditable(true);
            tf_codigo_cep.setEditable(true);
            tf_municipio.setEditable(true);
            tf_uf.setEditable(true);
            tf_logradouro.setEditable(true);
            tf_numero.setEditable(true);
            tf_bairro.setEditable(true);
            jf_cpf_cnpj.setEditable(true);
            jf_foneFixo.setEditable(true);
            tf_celular1.setEditable(true);
            tf_celular2.setEditable(true);

        }

        if ("cancelar".equals(botao)) {
            atualizaTela();
            estadoBotoes("inicial");
        }
        if ("salvar".equals(botao)) {
            estadoBotoes("inicial");

        }

        if ("buscar".equals(botao)) {
            estadoBotoes("inicial");

        }

    }

    public Date converte(String dataNasc) throws ParseException {
        DateFormat forma = new SimpleDateFormat("dd/MM/yyyy");
        java.sql.Date dat = new java.sql.Date(forma.parse(dataNasc).getTime());

        return dat;
    }

    private void atualizaTela() {
        CadClinicaDAO dao = new CadClinicaDAO();
        Clinica c = dao.mostrarUltimo();
        mostrar_dados(c);
    }

    public void mostrar_dados(Clinica emp) {
        SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");
        if (emp != null) {

            try {
                tf_codigo.setText("" + emp.getId());
                tf_fantasia.setText(emp.getFantasia());
                tf_razao.setText(emp.getRazao());
                tf_email.setText(emp.getEmail());

                if (!emp.getCep().getCodCep().equals("     -   ")) {
                    tf_codigo_cep.setText(emp.getCep().getCodCep());
                } else {
                    tf_codigo_cep.setText("");
                }
                tf_municipio.setText(emp.getCep().getCidade());
                tf_uf.setText(emp.getCep().getUf());
                tf_logradouro.setText(emp.getCep().getLogradouro());
                tf_numero.setText(emp.getNumero());
                tf_bairro.setText(emp.getCep().getBairro());
                jf_cpf_cnpj.setText(emp.getCnpj());
                jf_foneFixo.setText(emp.getFoneFixo());
                tf_celular1.setText(emp.getCelular1());
                tf_celular2.setText(emp.getCelular2());
                tf_imagem.setText(emp.getLogoClinica().getNome());

                byte[] imagemStream = emp.getLogoClinica().getFigura();

                //Converte o tamanho da imagem e mostra no jLabel
                BufferedImage img = ImageIO.read(new ByteArrayInputStream(imagemStream));
                BufferedImage aux = new BufferedImage(179, 108, img.getType());//cria um buffer auxiliar com o tamanho desejado
                Graphics2D g = aux.createGraphics();//pega a classe graphics do aux para edicao
                AffineTransform at = AffineTransform.getScaleInstance((double) 179 / img.getWidth(), (double) 108 / img.getHeight());//cria a transformacao
                g.drawRenderedImage(img, at);//pinta e transforma a imagem real no auxiliar
                LB_Foto.setIcon(new ImageIcon(aux));

            } catch (IOException ex) {
                Logger.getLogger(CadClinica.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    public void buscaPorId(String id) {
        CadClinicaDAO dao = new CadClinicaDAO();
        Clinica clinica = dao.buscEmpPid(Integer.parseInt(id));
        if (clinica == null) {
            JOptionPane.showMessageDialog(null, "Clinica não cadastrada!");
             tf_codigo.requestFocus();
        }
        mostrar_dados(clinica);
    }

    public void telBuscEmp() {
        BuscaClinica pcp = new BuscaClinica(null, true);
        pcp.getRootPane().setWindowDecorationStyle(JRootPane.COLOR_CHOOSER_DIALOG);
        pcp.setVisible(true);

        if (pcp.okselecionado()) {

            Clinica emp = pcp.retornCliSele();
            mostrar_dados(emp);
        }

    }

}
